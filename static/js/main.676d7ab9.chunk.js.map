{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Movies","props","handleChange","e","setState","searchInput","target","value","callApiData","state","movies","fetch","this","then","data","json","Search","console","log","Component","style","display","fontSize","margin","marginBottom","onChange","type","placeholder","CardsList","flexWrap","flexDirection","width","justifyContent","Array","isArray","length","map","movie","index","idx","Card","handleHover","useState","hover","setHover","height","padding","boxShadow","onMouseEnter","onMouseLeave","textAlign","marginTop","Title","position","color","background","imdbID","src","Poster","alt","Year","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"yNACMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,QAAQ,WAC3C,EAAKC,kBApBP,EAAKC,MAAQ,CACXC,OAAQ,GACRL,YAAa,OAJE,E,+CAQnB,WAAe,IAAD,OACZM,MAAM,8CAAD,OAA+CC,KAAKH,MAAMJ,cAC9DQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACJ,EAAKV,SAAS,CAACM,OAAQI,EAAKE,SAAS,kBAAMC,QAAQC,IAAI,EAAKT,MAAMC,gB,+BAItE,WACEE,KAAKJ,gB,oBASP,WACE,OACE,qCACC,cAAC,EAAD,CAAQN,aAAcU,KAAKV,eAC3B,cAAC,EAAD,CAAWQ,OAAQE,KAAKH,MAAMC,gB,GA/BhBS,aAqCfH,EAAS,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,aAQf,OACE,uBAAOkB,MARU,CACjBC,QAAS,QACTC,SAAU,OACVC,OAAQ,YACRC,aAAc,QAIYC,SAAU,SAACtB,GAAD,OAAOD,EAAaC,IAAIuB,KAAK,OAAOC,YAAY,uBAIlFC,EAAY,SAAC,GAAc,IAAblB,EAAY,EAAZA,OASlB,OACE,qBAAKU,MATe,CACpBC,QAAS,OACTQ,SAAU,OACVC,cAAe,MACfC,MAAO,MACPR,OAAQ,SACRS,eAAgB,UAGhB,SACGC,MAAMC,QAAQxB,IAAWA,EAAOyB,QAAUzB,EAAO0B,KAAI,SAACC,EAAOC,GAAR,OAAkB,cAAC,EAAD,CAAkBC,IAAKD,EAAOD,MAAOA,GAA1BC,SAKnFE,EAAO,SAAC,GAA+B,IAA9BH,EAA6B,EAA7BA,MAEb,GAF0C,EAAtBI,YAAsB,EAATF,IAEPG,oBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,sBAAKxB,MAXY,CACjBC,QAAS,eACTU,MAAO,QACPc,OAAQ,QACRC,QAAS,MACTC,UAAW,qEACXxB,OAAQ,SACRC,aAAc,QAIUwB,aAAc,WAAOJ,GAAS,IAAQK,aAAc,WAAOL,GAAS,IAA5F,UACE,oBAAIxB,MAAO,CAAC8B,UAAW,SAAUJ,QAAS,MAAOvB,OAAQ,EAAG4B,UAAW,QAAvE,SAAiFd,EAAMe,QACvF,gCACGT,GAAS,qBAAIvB,MAAO,CAACiC,SAAU,WAAYC,MAAO,MAAOhC,SAAU,OAAQiC,WAAY,SAA9E,sBAAkGlB,EAAMmB,UAClH,qBAAKC,IAAKpB,EAAMqB,OAAQC,IAAI,IAAI5B,MAAM,YAExC,mBAAGX,MAAO,CAAC8B,UAAW,SAAU3B,OAAQ,EAAG4B,UAAW,QAAtD,SAAgEd,EAAMuB,WAK7D5D,ICjFA6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.676d7ab9.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\nclass Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      movies: [],\n      searchInput: 'war'\n    }\n  }\n\n  callApiData() {\n    fetch(`https://www.omdbapi.com/?apikey=45f0782a&s=${this.state.searchInput}`)\n    .then(data => data.json())\n    .then(data => {\n      this.setState({movies: data.Search}, () => console.log(this.state.movies))\n    })\n  }\n\n  componentDidMount() {\n    this.callApiData()\n  }\n\n  handleChange = (e) => {\n    this.setState({searchInput: e.target.value}, () => {\n      this.callApiData()\n    })\n  }\n\n  render() { \n    return ( \n      <>\n       <Search handleChange={this.handleChange}/>\n       <CardsList movies={this.state.movies} />\n      </>\n    );\n  }\n}\n\nconst Search = ({handleChange}) => {\n  const inputStyle = {\n    display: \"block\",\n    fontSize: \"30px\",\n    margin: \"20px auto\",\n    marginBottom: \"50px\"\n  }\n\n  return (  \n    <input style={inputStyle} onChange={(e) => handleChange(e)} type=\"text\" placeholder=\"Search a movie...\"/>\n  );\n}\n\nconst CardsList = ({movies}) => {\n  const listContainer = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    width: '90%',\n    margin: \"0 auto\",\n    justifyContent: 'center'\n  }\n  return (  \n    <div style={listContainer}> \n      {Array.isArray(movies) && movies.length && movies.map((movie, index) => <Card key={index} idx={index} movie={movie}/>)}\n    </div>\n  );\n}\n\nconst Card = ({movie, handleHover, idx}) => {\n\n  const [hover, setHover] = useState(false)\n\n  const cardStyles = {\n    display: \"inline-block\", \n    width: \"150px\", \n    height: \"320px\", \n    padding: \"0px\", \n    boxShadow: 'rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px', \n    margin: '0 20px', \n    marginBottom: '20px'\n  }\n\n  return (\n    <div style={cardStyles} onMouseEnter={() => {setHover(true)}} onMouseLeave={() => {setHover(false)}}>\n      <h6 style={{textAlign: 'center', padding: '5px', margin: 0, marginTop: '10px'}}>{movie.Title}</h6>\n      <div>\n        {hover && <h6 style={{position: 'absolute', color: 'red', fontSize: \"14px\", background: 'white'}}>Imdb_id: {movie.imdbID}</h6>}\n        <img src={movie.Poster} alt='.' width=\"100%\"/>\n      </div>\n      <p style={{textAlign: 'center', margin: 0, marginTop: '10px'}}>{movie.Year}</p>\n    </div>\n  )\n}\n\nexport default Movies;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}